cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - ./.cargo
    - target

stages:
  - test
  - build
  - deploy

test:
  stage: test
  script:
    - docker-compose -f docker-compose.test.yml up --abort-on-container-exit

build:
  stage: build
  before_script:
    - docker login -u dimashur -p $ACCESS_TOKEN $CI_REGISTRY
  after_script:
    - docker logout $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY/dimashur/productivity:latest --target production .
    - docker push $CI_REGISTRY/dimashur/productivity:latest

deploy:
  stage: deploy
  before_script:
    - mkdir -p ~/.ssh
    - echo "$DEPLOY_SERVER_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H $DEPLOYMENT_SERVER_IP >> ~/.ssh/known_hosts

  script:
    - scp -r ./docker-compose.prod.yml $PROD_ENV root@${DEPLOYMENT_SERVER_IP}:/usr/src/productivity
    - ssh root@$DEPLOYMENT_SERVER_IP "cd /usr/src/productivity; export $(cat $PROD_ENV | xargs); docker login -u dimashur -p ${ACCESS_TOKEN} ${CI_REGISTRY}; docker-compose -f docker-compose.prod.yml stop; docker-compose -f docker-compose.prod.yml rm productivity_back --force; docker pull ${CI_REGISTRY}/dimashur/productivity:latest; docker-compose -f docker-compose.prod.yml up -d"
